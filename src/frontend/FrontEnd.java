/*
 * Copyright (C) 2014 pelikan
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package frontend;

import functions.CDF;
import functions.SampledFunction;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import parameters.SimData;
import parameters.SimDataReader;
import parameters.Validator;
import statistics.Image;

/**
 *
 * @author pelikan
 */


public class FrontEnd extends javax.swing.JFrame {

    /**
     * Creates new form FrontEnd
     */
    SimData ourSimData;
    JFileChooser filechooser;
    int maximum_age;
    public FrontEnd() {
        this.filechooser = new JFileChooser();
        filechooser.setFileFilter( 
                new FileNameExtensionFilter(
        "SimData xml", "xml", "XML"));
        ourSimData=new SimData();
        //getSimData("DefaultSimData.xml");
        initComponents();
        displaySimData();
    }
    public void getSimData(String xmlfilename) {

        // New 27 Jan 2012 make sure the xml file is valid
        Validator v = new Validator(xmlfilename);
        String ans = v.validate();
        if (ans.length() > 0) {
            System.err.println(ans);
            System.exit(0);

        }
        // end new 27 Jan 2012

        SimDataReader my_mb = null; // a model builder for parsing .xml
        try {
            SAXParserFactory factory = SAXParserFactory.newInstance();
            SAXParser saxParser = factory.newSAXParser();
            org.xml.sax.XMLReader parser = saxParser.getXMLReader();
            my_mb = new SimDataReader();
            parser.setContentHandler(my_mb);
            try {
                parser.parse(xmlfilename);
            } catch (Exception e) {
                System.out.println("Parsing error in SimData(xmlfilename) "
                        + e.toString());
            }
        } catch (Exception e) {
            System.out.println("Problem getting a parser in SimDataReader()");
        }
        ourSimData = my_mb.getSD();
        ourSimData.MakeFinal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        numautolociTextField = new javax.swing.JTextField();
        allelesperlocusTextField = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        RandomMatingCheckBox = new javax.swing.JCheckBox();
        DioeceousCheckBox = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        selfingrateTextField = new javax.swing.JTextField();
        compatibilityCheckBox = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        compatibilitylocusTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        compatibilityfractionTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        reproductionButton = new javax.swing.JButton();
        offspringmethodComboBox = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        mortalityButton = new javax.swing.JButton();
        dispersaldistancesButton = new javax.swing.JButton();
        dispersalDirectionCheckBox = new javax.swing.JCheckBox();
        editdirectionButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        pollenrateButton = new javax.swing.JButton();
        pollendistanceButton = new javax.swing.JButton();
        pollendirectionCheckBox = new javax.swing.JCheckBox();
        pollendirectionButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        seedgerminationButton = new javax.swing.JButton();
        seedmortalityButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        mapregionButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        SimulationPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        numberrunsTextField = new javax.swing.JTextField();
        generationsTextField = new javax.swing.JTextField();
        dataintervalTextField = new javax.swing.JTextField();
        makemapsCheckBox = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        mapyearsTextField = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Automatic loci"));

        jLabel1.setText("Number auto loci");

        jLabel2.setText("Alleles per locus");

        numautolociTextField.setMinimumSize(new java.awt.Dimension(84, 28));
        numautolociTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numautolociTextFieldActionPerformed(evt);
            }
        });

        allelesperlocusTextField.setText("jTextField2");
        allelesperlocusTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allelesperlocusTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(allelesperlocusTextField)
                    .addComponent(numautolociTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(numautolociTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(allelesperlocusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("User loci"));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Properties"));

        RandomMatingCheckBox.setText("Random mating");
        RandomMatingCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                RandomMatingstateChanged(evt);
            }
        });

        DioeceousCheckBox.setText("Dioecious");
        DioeceousCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DioeceousstateChanged(evt);
            }
        });

        jLabel3.setText("Selfing rate");

        selfingrateTextField.setText("jTextField3");
        selfingrateTextField.setMinimumSize(new java.awt.Dimension(84, 28));
        selfingrateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selfingrateTextFieldActionPerformed(evt);
            }
        });

        compatibilityCheckBox.setText("Compatibility");
        compatibilityCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                compatibilityCheckBoxStateChanged(evt);
            }
        });

        jLabel9.setText("Locus:");

        compatibilitylocusTextField.setText("jTextField1");
        compatibilitylocusTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compatibilitylocusTextFieldActionPerformed(evt);
            }
        });

        jLabel10.setText("fraction");

        compatibilityfractionTextField.setText("jTextField1");
        compatibilityfractionTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compatibilityfractionTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(RandomMatingCheckBox)
                        .addGap(104, 104, 104)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selfingrateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(DioeceousCheckBox)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(compatibilityCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compatibilitylocusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(compatibilityfractionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(194, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RandomMatingCheckBox)
                    .addComponent(jLabel3)
                    .addComponent(selfingrateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DioeceousCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compatibilityCheckBox)
                    .addComponent(jLabel9)
                    .addComponent(compatibilitylocusTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(compatibilityfractionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Genetics", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Reproduction"));

        reproductionButton.setText("Reproduction rate");
        reproductionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reproductionButtonActionPerformed(evt);
            }
        });

        offspringmethodComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Round", "Bracket", "Poisson" }));
        offspringmethodComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                offspringmethodComboBoxActionPerformed(evt);
            }
        });

        jLabel8.setText("Offspring distribution");

        mortalityButton.setText("Mortality rate");
        mortalityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mortalityButtonActionPerformed(evt);
            }
        });

        dispersaldistancesButton.setText("Dispersal distances");
        dispersaldistancesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispersaldistancesButtonActionPerformed(evt);
            }
        });

        dispersalDirectionCheckBox.setText("Dispersal direction");
        dispersalDirectionCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                dispersalDirectionCheckBoxStateChanged(evt);
            }
        });
        dispersalDirectionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dispersalDirectionCheckBoxActionPerformed(evt);
            }
        });

        editdirectionButton.setText("Edit direction");
        editdirectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editdirectionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(reproductionButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mortalityButton))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(dispersaldistancesButton)
                                .addGap(18, 18, 18)
                                .addComponent(dispersalDirectionCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(editdirectionButton))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(offspringmethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reproductionButton)
                    .addComponent(mortalityButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(offspringmethodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dispersaldistancesButton)
                    .addComponent(dispersalDirectionCheckBox)
                    .addComponent(editdirectionButton))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Pollen"));

        pollenrateButton.setText("Pollen rate");
        pollenrateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollenrateButtonActionPerformed(evt);
            }
        });

        pollendistanceButton.setText("Pollen distances");
        pollendistanceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollendistanceButtonActionPerformed(evt);
            }
        });

        pollendirectionCheckBox.setText("Pollen direction");
        pollendirectionCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pollendirectionCheckBoxStateChanged(evt);
            }
        });
        pollendirectionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollendirectionCheckBoxActionPerformed(evt);
            }
        });

        pollendirectionButton.setText("Edit direction");
        pollendirectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pollendirectionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pollenrateButton)
                    .addComponent(pollendistanceButton))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pollendirectionCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pollendirectionButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(pollenrateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pollendistanceButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pollendirectionCheckBox)
                    .addComponent(pollendirectionButton))
                .addGap(0, 24, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Seed bank"));

        seedgerminationButton.setText("Seed germination rate");
        seedgerminationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seedgerminationButtonActionPerformed(evt);
            }
        });

        seedmortalityButton.setText("Seed mortality rate");
        seedmortalityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seedmortalityButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seedgerminationButton)
                    .addComponent(seedmortalityButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(seedgerminationButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seedmortalityButton)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Reproduction", jPanel2);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Region"));

        jButton1.setText("Edit Region");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        mapregionButton.setText("Map Region");
        mapregionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapregionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(mapregionButton))
                .addContainerGap(494, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mapregionButton)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Summary Regions"));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 179, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Geography", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 629, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Founders", jPanel4);

        jLabel4.setText("Number runs");

        jLabel5.setText("Generations");

        jLabel6.setText("Data interval");

        numberrunsTextField.setText("jTextField1");
        numberrunsTextField.setToolTipText("The number of replicate populations to generate");
        numberrunsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberrunsTextFieldActionPerformed(evt);
            }
        });

        generationsTextField.setText("jTextField2");
        generationsTextField.setToolTipText("Number of generations in each run. Including the founding (0) generation.");
        generationsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generationsTextFieldActionPerformed(evt);
            }
        });

        dataintervalTextField.setText("jTextField3");
        dataintervalTextField.setToolTipText("How often to summarize the population in each run");
        dataintervalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataintervalTextFieldActionPerformed(evt);
            }
        });

        makemapsCheckBox.setText("Make maps");
        makemapsCheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                makemapsCheckBoxStateChanged(evt);
            }
        });

        jLabel7.setText("Years: ");

        mapyearsTextField.setText("jTextField1");
        mapyearsTextField.setToolTipText("Comma separated list of the years in which to generate maps of the region, population, and seedbank during the first run");
        mapyearsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapyearsTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SimulationPanelLayout = new javax.swing.GroupLayout(SimulationPanel);
        SimulationPanel.setLayout(SimulationPanelLayout);
        SimulationPanelLayout.setHorizontalGroup(
            SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SimulationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SimulationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(dataintervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SimulationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(generationsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SimulationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(numberrunsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(SimulationPanelLayout.createSequentialGroup()
                .addComponent(makemapsCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mapyearsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 382, Short.MAX_VALUE))
        );
        SimulationPanelLayout.setVerticalGroup(
            SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SimulationPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(numberrunsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(generationsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dataintervalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SimulationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(makemapsCheckBox)
                    .addComponent(jLabel7)
                    .addComponent(mapyearsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(260, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Simulation", SimulationPanel);

        jMenu1.setText("File");

        jMenuItem1.setText("Default");
        jMenu1.add(jMenuItem1);

        openMenuItem.setText("Open ...");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(openMenuItem);

        saveMenuItem.setText("Save as ...");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenuItem);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        // TODO add your handling code here:
        filechooser.setDialogTitle("Open file");
        int ans=filechooser.showOpenDialog(this) ;   
        if(ans== JFileChooser.CANCEL_OPTION) return;
        File file= filechooser.getSelectedFile();
        
        String fn=file.getAbsolutePath();
        
        try{
           getSimData(fn);
        } catch(Exception e){System.out.println(e.toString());}
        displaySimData();
    }//GEN-LAST:event_openMenuItemActionPerformed

    private void numautolociTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numautolociTextFieldActionPerformed
        // TODO add your handling code here:
         String text = this.numautolociTextField.getText();
         try
         {
             ourSimData.number_automatic_loci=  Integer.parseInt(text);
         }
         catch(NumberFormatException e)
         {
             
         }
    }//GEN-LAST:event_numautolociTextFieldActionPerformed

    private void RandomMatingstateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_RandomMatingstateChanged
        // TODO add your handling code here:
        if(this.RandomMatingCheckBox.isSelected()) ourSimData.random_mating=true;
        else ourSimData.random_mating=false;
    }//GEN-LAST:event_RandomMatingstateChanged

    private void DioeceousstateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DioeceousstateChanged
        // TODO add your handling code here:
        if(this.DioeceousCheckBox.isSelected())ourSimData.dioeceous=true;
        else ourSimData.dioeceous=false;
    }//GEN-LAST:event_DioeceousstateChanged

    private void allelesperlocusTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allelesperlocusTextFieldActionPerformed
        // TODO add your handling code here:
         String text = this.allelesperlocusTextField.getText();
         try
         {
             ourSimData.auto_alleles_per_locus=  Integer.parseInt(text);
         }
         catch(NumberFormatException e)
         {
             
         }
    }//GEN-LAST:event_allelesperlocusTextFieldActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        // TODO add your handling code here:
        filechooser.setDialogTitle("Save to");
        int ans=filechooser.showSaveDialog(this);
        if(ans== JFileChooser.CANCEL_OPTION) return;
        File file= filechooser.getSelectedFile();
        
        String fn=file.getAbsolutePath();
        
        try{
            FileWriter fw = new FileWriter(file);
                    BufferedWriter br = new BufferedWriter(fw);
                    PrintWriter pw = new PrintWriter(br, true);
                    pw.println(ourSimData.toString());
                    pw.close();
        } catch(Exception e){System.out.println(e.toString());}
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void selfingrateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selfingrateTextFieldActionPerformed
        // TODO add your handling code here:
         String text = this.allelesperlocusTextField.getText();
         try
         {
             ourSimData.selfing_rate=  Float.parseFloat(text);
         }
         catch(NumberFormatException e)
         {
             
         }
    }//GEN-LAST:event_selfingrateTextFieldActionPerformed

    private void numberrunsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberrunsTextFieldActionPerformed
        // TODO add your handling code here:
         String text = this.numberrunsTextField .getText();
         try
         {
             ourSimData.number_runs=  Integer.parseInt(text);
         }
         catch(NumberFormatException e)
         {
             
         }
    }//GEN-LAST:event_numberrunsTextFieldActionPerformed

    private void generationsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generationsTextFieldActionPerformed
        // TODO add your handling code here:
        String text = this.generationsTextField .getText();
         try
         {
             ourSimData.number_generations=  Integer.parseInt(text);
         }
         catch(NumberFormatException e)
         {
             
         }
    }//GEN-LAST:event_generationsTextFieldActionPerformed

    private void dataintervalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataintervalTextFieldActionPerformed
        // TODO add your handling code here:
        String text = this.dataintervalTextField .getText();
         try
         {
             ourSimData.datainterval=  Integer.parseInt(text);
         }
         catch(NumberFormatException e)
         {
             
         }
    }//GEN-LAST:event_dataintervalTextFieldActionPerformed

    private void makemapsCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_makemapsCheckBoxStateChanged
        // TODO add your handling code here:
        if(makemapsCheckBox.isSelected())
        {
            ourSimData.makeMap=true;
            this.mapyearsTextField.setEnabled(true);
        }
        else
        {
            ourSimData.makeMap=false;
            this.mapyearsTextField.setEnabled(false);
        }
    }//GEN-LAST:event_makemapsCheckBoxStateChanged

    private void offspringmethodComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_offspringmethodComboBoxActionPerformed
        // TODO add your handling code here:
        int method=this.offspringmethodComboBox.getSelectedIndex();
        switch(method)
        {
            case 0:
                ourSimData.off_dist_method="round";
                break;
            case 1:
                ourSimData.off_dist_method="bracket";
                break;
            case 2:
                ourSimData.off_dist_method="poisson";
                break;
            default:
                ourSimData.off_dist_method="poisson";
        }
    }//GEN-LAST:event_offspringmethodComboBoxActionPerformed

    private void dispersaldistancesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispersaldistancesButtonActionPerformed
        // TODO add your handling code here:
        //open editor dialog
        editableSampledFunction esf=new editableSampledFunction(ourSimData.dispersal_distribution .y,ourSimData.dispersal_distribution.x);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        esf.YHighFixed=true;
        esf.YHigh=1.0;
        esf.MonotoneIncreasing=true;
        FunctionDisplay fd=new FunctionDisplay(esf,600,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"Dispersal_Distribution",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.dispersal_distribution=new CDF(fed.ourFD.sf.x,fed.ourFD.sf.y);
    }//GEN-LAST:event_dispersaldistancesButtonActionPerformed

    private void reproductionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reproductionButtonActionPerformed
        // TODO add your handling code here:
        //open editor dialog
        editableSampledFunction esf=new editableSampledFunction(ourSimData.fruit_production.x,ourSimData.fruit_production.y);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        FunctionDisplay fd=new FunctionDisplay(esf,600,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"ReproductionRate",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.fruit_production=new SampledFunction(fed.ourFD.sf.x,fed.ourFD.sf.y);
        
    }//GEN-LAST:event_reproductionButtonActionPerformed

    private void mortalityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mortalityButtonActionPerformed
        // TODO add your handling code here:
        //open editor dialog
        editableSampledFunction esf=new editableSampledFunction(ourSimData.mortality .x,ourSimData.mortality.y);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        esf.YHighFixed=true;
        esf.YHigh=1.0;
        FunctionDisplay fd=new FunctionDisplay(esf,600,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"MortalityRate",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.mortality=new SampledFunction(fed.ourFD.sf.x,fed.ourFD.sf.y);
        
        
    }//GEN-LAST:event_mortalityButtonActionPerformed

    private void editdirectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editdirectionButtonActionPerformed
        // TODO add your handling code here:
        //open editor dialog
        editableSampledFunction esf=new editableSampledFunction(ourSimData.DispersalDirection .y,ourSimData.DispersalDirection.x);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        esf.YHighFixed=true;
        esf.YHigh=1.0;
        esf.XHighFixed=true;
        esf.XHigh=360.0;
        esf.MonotoneIncreasing=true;
        FunctionDisplay fd=new FunctionDisplay(esf,600,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"DispersalDirection",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.DispersalDirection=new CDF(fed.ourFD.sf.x,fed.ourFD.sf.y);
    }//GEN-LAST:event_editdirectionButtonActionPerformed

    private void mapyearsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapyearsTextFieldActionPerformed
        // TODO add your handling code here:
        //get the text, split it, set mapYears
         String text = this.dataintervalTextField .getText();
         String []years= text.split(",");
         ourSimData.mapYears= new int[years.length];
         for(int i=0;i<years.length;i++)
         {
         try
         {
             ourSimData.mapYears[i]=  Integer.parseInt(years[i]);
         }
         catch(NumberFormatException e)
         {
             
         }
         }
    }//GEN-LAST:event_mapyearsTextFieldActionPerformed

    private void pollendirectionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollendirectionCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pollendirectionCheckBoxActionPerformed

    private void pollenrateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollenrateButtonActionPerformed
        // TODO add your handling code here:
        //open dialog
         editableSampledFunction esf=new editableSampledFunction(ourSimData.pollen_production .x,ourSimData.pollen_production.y);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        //esf.YHighFixed=true;
        //esf.YHigh=1.0;
        FunctionDisplay fd=new FunctionDisplay(esf,400,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"Pollen_Rate",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.pollen_production=new SampledFunction(fed.ourFD.sf.x,fed.ourFD.sf.y);
    }//GEN-LAST:event_pollenrateButtonActionPerformed

    private void pollendistanceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollendistanceButtonActionPerformed
        // TODO add your handling code here:
        //open dialog
    }//GEN-LAST:event_pollendistanceButtonActionPerformed

    private void dispersalDirectionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dispersalDirectionCheckBoxActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_dispersalDirectionCheckBoxActionPerformed

    private void dispersalDirectionCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_dispersalDirectionCheckBoxStateChanged
        // TODO add your handling code here:
        if(this.dispersalDirectionCheckBox.isSelected())
        {
            ourSimData.usePollenDirection=true;
            this.editdirectionButton.setEnabled(true);
            
        }
        else
        {
            ourSimData.usePollenDirection=false;
            this.editdirectionButton.setEnabled(false);
        }
    }//GEN-LAST:event_dispersalDirectionCheckBoxStateChanged

    private void pollendirectionCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pollendirectionCheckBoxStateChanged
        // TODO add your handling code here:
        ourSimData.usePollenDirection=this.pollendirectionCheckBox.isSelected();
        this.pollendirectionButton.setEnabled(this.pollendirectionCheckBox.isSelected());
    }//GEN-LAST:event_pollendirectionCheckBoxStateChanged

    private void seedgerminationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seedgerminationButtonActionPerformed
        // TODO add your handling code here:
         editableSampledFunction esf=new editableSampledFunction(ourSimData.seed_germination_rate .x,ourSimData.seed_germination_rate.y);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        esf.YHighFixed=true;
        esf.YHigh=1.0;
        FunctionDisplay fd=new FunctionDisplay(esf,400,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"SeedGerminationRate",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.seed_germination_rate=new SampledFunction(fed.ourFD.sf.x,fed.ourFD.sf.y);
    }//GEN-LAST:event_seedgerminationButtonActionPerformed

    private void seedmortalityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seedmortalityButtonActionPerformed
        // TODO add your handling code here:
         editableSampledFunction esf=new editableSampledFunction(ourSimData.seedmortality .x,ourSimData.seedmortality.y);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        esf.YHighFixed=true;
        esf.YHigh=1.0;
        FunctionDisplay fd=new FunctionDisplay(esf,400,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"SeedMortalityRate",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.seedmortality=new SampledFunction(fed.ourFD.sf.x,fed.ourFD.sf.y);
    }//GEN-LAST:event_seedmortalityButtonActionPerformed

    private void compatibilityCheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_compatibilityCheckBoxStateChanged
        // TODO add your handling code here:
        ourSimData.compatibility=this.compatibilityCheckBox.isSelected();
        this.compatibilitylocusTextField.setEnabled(compatibilityCheckBox.isSelected());
        this.compatibilityfractionTextField.setEnabled(compatibilityCheckBox.isSelected());
    }//GEN-LAST:event_compatibilityCheckBoxStateChanged

    private void compatibilitylocusTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compatibilitylocusTextFieldActionPerformed
        // TODO add your handling code here:
        String text = this.compatibilitylocusTextField .getText();
         try
         {
             ourSimData.compatibility_locus=  Integer.parseInt(text);
         }
         catch(NumberFormatException e)
         {
             
         }
        
    }//GEN-LAST:event_compatibilitylocusTextFieldActionPerformed

    private void compatibilityfractionTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compatibilityfractionTextFieldActionPerformed
        // TODO add your handling code here:
        String text = this.compatibilityfractionTextField   .getText();
         try
         {
             ourSimData.compatibility_fraction=  Float.parseFloat(text);
         }
         catch(NumberFormatException e)
         {
             
         }
    }//GEN-LAST:event_compatibilityfractionTextFieldActionPerformed

    private void pollendirectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pollendirectionButtonActionPerformed
        // TODO add your handling code here:
         editableSampledFunction esf=new editableSampledFunction(ourSimData.PollenDirection .x,ourSimData.PollenDirection.y);
        esf.XLowFixed=true;
        esf.XLow=0.0;
        esf.YLowFixed=true;
        esf.YLow=0.0;
        esf.XHighFixed=true;
        esf.YHigh=360.0;
        esf.YHighFixed=true;
        esf.YHigh=1.0;
        esf.Periodic=true;
        FunctionDisplay fd=new FunctionDisplay(esf,400,400,esf.x[0],esf.x[esf.x.length-1],esf.minimum_value(),esf.maximum_value());
        //FunctionEditDialog fed=new FunctionEditDialog(this,true,fd);
        FED fed=new FED(this,"PollenDirection",true,fd);
        fed.setVisible(true);
        //extract the esf back into ourSimData
        ourSimData.PollenDirection=new SampledFunction(fed.ourFD.sf.x,fed.ourFD.sf.y);
    }//GEN-LAST:event_pollendirectionButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mapregionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapregionButtonActionPerformed
        // TODO add your handling code here:
        //make a map of the region and display it in a dialog
        Image im=new Image(ourSimData);
        im.setPixelsPerSite(2);
        im.drawMap();
        //Diplay in a ialog ID = image display
        BufferedImage ourpic=im.getBufferedImage();
        ID id= new ID(this,true,ourpic);
        id.setVisible(true);
        
    }//GEN-LAST:event_mapregionButtonActionPerformed

    private void displaySimData()
    {
        this.numautolociTextField.setText(""+ourSimData.number_automatic_loci);
        this.allelesperlocusTextField.setText(""+ourSimData.auto_alleles_per_locus);
        this.selfingrateTextField.setText(""+ourSimData.selfing_rate);
        this.numberrunsTextField.setText(""+ourSimData.number_runs);
        this.generationsTextField.setText(""+ourSimData.number_generations);
        this.dataintervalTextField.setText(""+ourSimData.datainterval);
        this.makemapsCheckBox.setSelected(ourSimData.makeMap);
        if(ourSimData.makeMap)
        {
            StringBuilder sb=new StringBuilder();
            for(int i=0;i< ourSimData.mapYears.length-1;i++ ) sb.append(""+ourSimData.mapYears[i]+",");
            sb.append(""+ourSimData.mapYears[ourSimData.mapYears.length-1]);
            this.mapyearsTextField.setText(sb.toString());
                this.mapyearsTextField.setEnabled(true);
        }
        else
        {
            this.mapyearsTextField.setText("   ");
             this.mapyearsTextField.setEnabled(false);
        }
        
        if(ourSimData.usePollenDirection)
        {
            this.pollendirectionCheckBox.setSelected(true);
            this.pollendirectionButton.setEnabled(true);
        }
        else
        {
            this.pollendirectionCheckBox.setSelected(false);
            this.pollendirectionButton.setEnabled(false);
        }
        if(ourSimData.useDispersalDirection)
        {
            //set check
            this.dispersalDirectionCheckBox.setSelected(true);
            //enable button
            this.editdirectionButton.setEnabled(true);
            
            
        }
        else
        {
            this.dispersalDirectionCheckBox.setSelected(false);
            this.editdirectionButton.setEnabled(false);
        }
        if(ourSimData.off_dist_method.equals("poisson"))
        {
            this.offspringmethodComboBox.setSelectedIndex(2);
        }
        else if(ourSimData.off_dist_method.equals("bracket"))
        {
            this.offspringmethodComboBox.setSelectedIndex(1);
        }
        else
        {
            this.offspringmethodComboBox.setSelectedIndex(0);
        }
        this.offspringmethodComboBox.setSelectedIndex(0);
        this.DioeceousCheckBox.setSelected(ourSimData.dioeceous);
        this.RandomMatingCheckBox.setSelected(ourSimData.random_mating);
        if(ourSimData.compatibility)
        {
            this.compatibilityCheckBox.setSelected(true);
            this.compatibilitylocusTextField.setEnabled(true);
            this.compatibilitylocusTextField.setText(""+ourSimData.compatibility_locus);
            this.compatibilityfractionTextField.setEnabled(true);
            this.compatibilityfractionTextField.setText(""+ourSimData.compatibility_fraction);
        }
        else
        {
            this.compatibilityCheckBox.setSelected(false);
            this.compatibilitylocusTextField.setEnabled(false);
            this.compatibilitylocusTextField.setText(""+ourSimData.compatibility_locus);
            this.compatibilityfractionTextField.setEnabled(false);
            this.compatibilityfractionTextField.setText(""+ourSimData.compatibility_fraction);
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontEnd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEnd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox DioeceousCheckBox;
    private javax.swing.JCheckBox RandomMatingCheckBox;
    private javax.swing.JPanel SimulationPanel;
    private javax.swing.JTextField allelesperlocusTextField;
    private javax.swing.JCheckBox compatibilityCheckBox;
    private javax.swing.JTextField compatibilityfractionTextField;
    private javax.swing.JTextField compatibilitylocusTextField;
    private javax.swing.JTextField dataintervalTextField;
    private javax.swing.JCheckBox dispersalDirectionCheckBox;
    private javax.swing.JButton dispersaldistancesButton;
    private javax.swing.JButton editdirectionButton;
    private javax.swing.JTextField generationsTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox makemapsCheckBox;
    private javax.swing.JButton mapregionButton;
    private javax.swing.JTextField mapyearsTextField;
    private javax.swing.JButton mortalityButton;
    private javax.swing.JTextField numautolociTextField;
    private javax.swing.JTextField numberrunsTextField;
    private javax.swing.JComboBox offspringmethodComboBox;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton pollendirectionButton;
    private javax.swing.JCheckBox pollendirectionCheckBox;
    private javax.swing.JButton pollendistanceButton;
    private javax.swing.JButton pollenrateButton;
    private javax.swing.JButton reproductionButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton seedgerminationButton;
    private javax.swing.JButton seedmortalityButton;
    private javax.swing.JTextField selfingrateTextField;
    // End of variables declaration//GEN-END:variables
}
